###
Given a table salary, such as the one below, that has m=male and f=female values. Swap all f and m values (i.e., change all f values to m and vice versa) with a single update query and no intermediate temp table.

For example:
| id | name | sex | salary |
|----|------|-----|--------|
| 1  | A    | m   | 2500   |
| 2  | B    | f   | 1500   |
| 3  | C    | m   | 5500   |
| 4  | D    | f   | 500    |
After running your query, the above salary table should have the following rows:
| id | name | sex | salary |
|----|------|-----|--------|
| 1  | A    | f   | 2500   |
| 2  | B    | m   | 1500   |
| 3  | C    | f   | 5500   |
| 4  | D    | m   | 500    |
######################################################################################










Solution 1: 
UPDATE salary 
SET sex = CASE sex
WHEN 'f' THEN 'm'
WHEN 'm' THEN 'f'      ##ELSE 'f'
END;

#https://community.modeanalytics.com/sql/tutorial/sql-case/
#The CASE statement is SQL’s way of handling if/then logic. 
#The CASE statement is followed by at least one pair of WHEN and THEN statements—SQL’s equivalent of IF/THEN in Excel. 
#Every CASE statement must end with the END statement. The ELSE statement is optional, and provides a way to capture values not specified in the WHEN/THEN statements.

Solution 2:
UPDATE salary 
SET sex = IF(sex='f','m','f');
